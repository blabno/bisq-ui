// http://ionicframework.com/docs/theming/

// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.

:root {
  --light-grey: #bbbbbb;
  --facile-grey: #dedede;
}

a:hover {
  text-decoration: none;
}

.card {
  margin-bottom: 15px;
}

.view {
  padding: 15px;
}

.clickable {
  cursor: pointer;
  &:hover {
    border-color: var(--blue);
  }
}

.scroll-content {
  overflow-y: auto;
  padding-bottom: 0 !important; // because it overrides the inline styles (padding-bottom: 300px) added when the user has focus on the input text field
}

ion-item.item {
  ion-label.label-md, ion-input.input-md, .select-text {
    padding-left: 5px;
  }
  &.item-md {
    padding-left: 0;
  }
  &.item-select-disabled ion-label {
    opacity: 1;
  }
  &.item-md.item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner, &.item-md.item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner {
    box-shadow: none;
    border-bottom-color: var(--facile-grey);
  }
  &.item-md.item-input.item-input-has-focus .item-inner, &.item-md.item-input.input-has-focus .item-inner {
    box-shadow: none;
    border-bottom-color: var(--facile-grey);
  }
  &.item-md.item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus) .item-inner {
    box-shadow: none;
    border-bottom-color: var(--facile-grey);
  }
  &.item-checkbox {
    margin-top: 22px;
    border-bottom: 1px solid var(--facile-grey);
    ion-checkbox.checkbox {
      margin-right: 12px;
    }
    .item-inner {
      border: 0;
      ion-label.label {
        color: #999;
      }
    }
  }
}

ion-toast {
  &.error .toast-wrapper {
    background-color: var(--red);
  }
  &.success .toast-wrapper {
    background-color: var(--success);
  }
}

.alert-message {
  overflow: hidden;
}

.desktop-max-width {
  margin: auto;
  max-width: 800px;
}

button ion-spinner {
  margin-left: 10px;
}

.no-results-card {
  text-align: center;
  color: gray;
  .card-body {
    padding: 2.25rem;
  }
  span {
    font-size: medium
  }
}

.loading {
  color: lightgray;
  h1 {
    margin-right: 10px;
  }
  ion-spinner * {
    width: 40px;
    height: 40px;
    stroke: lightgray;
  }
}
.small-loading {
  @extend .loading;
  h1 {
    margin-top: 0;
    font-size: 1.5rem;
  }
  ion-spinner * {
    width: 20px;
    height: 20px;
  }
}

ion-popover.select-popover ion-list {
  margin: 0;
  .item-radio.item-md ion-label, .label-md {
    margin-left: 16px;
  }
}

.suffix::after {
  content: attr(data-suffix);
  color: #999;
  width: 30px
}
.suffix > input.text-input  {
  width: calc(100% - 48px) !important;
}
.suffix-dynamic {
  color: #999;
  align-self: flex-end;
}

.validation {
  color: var(--red);
  margin-left: 5px;
}
